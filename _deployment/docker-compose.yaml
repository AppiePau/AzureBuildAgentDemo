services:
  frontend:
    container_name: frontend
    image: proget.apula.it/docker/library/mooiweer-frontend:${RELEASETAG}
    ports:
      - 80
    environment:
      - ENVIRONMENT=Production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.rule=Host(`mooiweer.demo`)"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.docker.network=proxy"
    networks:
      - internal
    restart: unless-stopped
  backend:
    container_name: backend
    image: proget.apula.it/docker/library/mooiweer-backend:${RELEASETAG}
    ports:
      - 80
    environment:
      - ASPNETCORE_URLS=http://+
      - ASPNETCORE_HTTP_PORT=80
      - ASPNETCORE_Environment=Production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.rule=Host(`mooiweer.demo`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.middlewares.backend.stripPrefix.prefixes=/api"
      - "traefik.docker.network=proxy"
    networks:
      - internal
    restart: unless-stopped
  traefik:
    container_name: traefik
    image: traefik:latest
    command:
      - --providers.docker=true
      - --traefik.docker.network=proxy
    ports:
      - "443:443"
    volumes:
      - "/opt/docker/traefik:/etc/traefik:ro"
      - "/opt/docker/cert:/ssl-certs:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - proxy
      - internal
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
networks:
  proxy:
    name: proxy
    external: true
  internal: